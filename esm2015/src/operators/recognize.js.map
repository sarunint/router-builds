{"version":3,"file":"recognize.js","sourceRoot":"","sources":["../../../../../packages/router/src/operators/recognize.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAO,EAAC,GAAG,EAAE,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AAG7C,OAAO,EAAC,SAAS,IAAI,WAAW,EAAC,MAAM,cAAc,CAAC;;;;;;;;;AAItD,MAAM,UAAU,SAAS,CACrB,iBAAkC,EAAE,MAAe,EAAE,UAAoC,EACzF,yBAAiD,EAAE,sBACpC;IACjB,OAAO,UAAS,MAAwC;QACtD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CACvB,CAAC,CAAC,EAAE,CAAC,WAAW,CACP,iBAAiB,EAAE,MAAM,EAAE,CAAC,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAC/E,yBAAyB,EAAE,sBAAsB,CAAC;aACjD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,mBAAK,CAAC,IAAE,cAAc,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACvE,CAAC;CACH","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\nimport {MonoTypeOperatorFunction, Observable} from 'rxjs';\nimport {map, mergeMap} from 'rxjs/operators';\n\nimport {Route} from '../config';\nimport {recognize as recognizeFn} from '../recognize';\nimport {NavigationTransition} from '../router';\nimport {UrlTree} from '../url_tree';\n\nexport function recognize(\n    rootComponentType: Type<any>| null, config: Route[], serializer: (url: UrlTree) => string,\n    paramsInheritanceStrategy: 'emptyOnly' | 'always', relativeLinkResolution: 'legacy' |\n        'corrected'): MonoTypeOperatorFunction<NavigationTransition> {\n  return function(source: Observable<NavigationTransition>) {\n    return source.pipe(mergeMap(\n        t => recognizeFn(\n                 rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects),\n                 paramsInheritanceStrategy, relativeLinkResolution)\n                 .pipe(map(targetSnapshot => ({...t, targetSnapshot})))));\n  };\n}\n"]}