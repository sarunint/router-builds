{"version":3,"file":"apply_redirects.js","sourceRoot":"","sources":["../../../../../packages/router/src/operators/apply_redirects.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAO,EAAC,GAAG,EAAE,SAAS,EAAC,MAAM,gBAAgB,CAAC;AAE9C,OAAO,EAAC,cAAc,IAAI,gBAAgB,EAAC,MAAM,oBAAoB,CAAC;;;;;;;;AAMtE,MAAM,UAAU,cAAc,CAC1B,cAAwB,EAAE,YAAgC,EAAE,aAA4B,EACxF,MAAc;IAChB,OAAO,UAAS,MAAwC;QACtD,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CACxB,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,cAAc,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC;aAChF,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC,mBAAK,CAAC,IAAE,iBAAiB,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAC;CACH","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {MonoTypeOperatorFunction, Observable} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\n\nimport {applyRedirects as applyRedirectsFn} from '../apply_redirects';\nimport {Routes} from '../config';\nimport {NavigationTransition} from '../router';\nimport {RouterConfigLoader} from '../router_config_loader';\nimport {UrlSerializer} from '../url_tree';\n\nexport function applyRedirects(\n    moduleInjector: Injector, configLoader: RouterConfigLoader, urlSerializer: UrlSerializer,\n    config: Routes): MonoTypeOperatorFunction<NavigationTransition> {\n  return function(source: Observable<NavigationTransition>) {\n    return source.pipe(switchMap(\n        t => applyRedirectsFn(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n                 .pipe(map(urlAfterRedirects => ({...t, urlAfterRedirects})))));\n  };\n}\n"]}