{"version":3,"file":"resolve_data.js","sourceRoot":"","sources":["../../../../../packages/router/src/operators/resolve_data.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {MonoTypeOperatorFunction, Observable, from, of } from 'rxjs';\nimport {concatMap, last, map, mergeMap, reduce} from 'rxjs/operators';\n\nimport {ResolveData} from '../config';\nimport {NavigationTransition} from '../router';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, inheritedParamsDataResolve} from '../router_state';\nimport {wrapIntoObservable} from '../utils/collection';\n\nimport {getToken} from '../utils/preactivation';\n\nexport function resolveData(\n    paramsInheritanceStrategy: 'emptyOnly' | 'always',\n    moduleInjector: Injector): MonoTypeOperatorFunction<NavigationTransition> {\n  return function(source: Observable<NavigationTransition>) {\n    return source.pipe(mergeMap(t => {\n      const {targetSnapshot, guards: {canActivateChecks}} = t;\n\n      if (!canActivateChecks.length) {\n        return of (t);\n      }\n\n      return from(canActivateChecks)\n          .pipe(\n              concatMap(\n                  check => runResolve(\n                      check.route, targetSnapshot !, paramsInheritanceStrategy, moduleInjector)),\n              reduce((_: any, __: any) => _), map(_ => t));\n    }));\n  };\n}\n\nfunction runResolve(\n    futureARS: ActivatedRouteSnapshot, futureRSS: RouterStateSnapshot,\n    paramsInheritanceStrategy: 'emptyOnly' | 'always', moduleInjector: Injector) {\n  const resolve = futureARS._resolve;\n  return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n      .pipe(map((resolvedData: any) => {\n        futureARS._resolvedData = resolvedData;\n        futureARS.data = {\n            ...futureARS.data,\n            ...inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve};\n        return null;\n      }));\n}\n\nfunction resolveNode(\n    resolve: ResolveData, futureARS: ActivatedRouteSnapshot, futureRSS: RouterStateSnapshot,\n    moduleInjector: Injector): Observable<any> {\n  const keys = Object.keys(resolve);\n  if (keys.length === 0) {\n    return of ({});\n  }\n  if (keys.length === 1) {\n    const key = keys[0];\n    return getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n        .pipe(map((value: any) => { return {[key]: value}; }));\n  }\n  const data: {[k: string]: any} = {};\n  const runningResolvers$ = from(keys).pipe(mergeMap((key: string) => {\n    return getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n        .pipe(map((value: any) => {\n          data[key] = value;\n          return value;\n        }));\n  }));\n  return runningResolvers$.pipe(last(), map(() => data));\n}\n\nfunction getResolver(\n    injectionToken: any, futureARS: ActivatedRouteSnapshot, futureRSS: RouterStateSnapshot,\n    moduleInjector: Injector): Observable<any> {\n  const resolver = getToken(injectionToken, futureARS, moduleInjector);\n  return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n                            wrapIntoObservable(resolver(futureARS, futureRSS));\n}"]}